<!-- ContactForm.razor -->
@using illumina_Coding_Assignment.Models
@using Microsoft.AspNetCore.Components.Forms
@using illumina_Coding_Assignment.Services;
@inject ContactService _service;
@if (Contact != null)
{
    <div class="modal-backdrop show"></div>
    <div class="modal show" tabindex="-1" style="display: block;" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@((Contact.Id == Guid.Empty ? "Create New Contact" : "Update Contact"))</h5>
                    <button type="button" class="close" @onclick="CloseModal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@Contact" OnValidSubmit="@SaveContact">

                        <div class="form-group">
                            <label for="name">Name:</label>
                            <InputText id="name" class="form-control" @bind-Value="Contact.Name" />
                        </div>
                        <div class="form-group" style="margin-top:5px">
                            <label for="countryCode">Country Code:</label>
                            <select class="form-control" id="countryCode" @bind="Contact.CountryCode">
                                @foreach (var codes in _service.CountryCodes)
                                {
                                    @if (codes.Code == Contact.CountryCode)
                                    {
                                        <option value="@codes.Code" selected>@codes.Code - @codes.Country</option>
                                    }else
                                    {
                                        <option value="@codes.Code" >@codes.Code - @codes.Country</option>
                                    }
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group" style="margin-top:5px">
                            <label for="phoneNumber">Phone Number:</label>
                            <InputText id="phoneNumber" class="form-control" @bind-Value="Contact.PhoneNumber" />
                        </div>
                        <div class="form-group" style="margin-top:5px">
                            <label for="unitNo">Unit No:</label>
                            <InputText id="unitNo" class="form-control" @bind-Value="Contact.UnitNo" />
                        </div>
                        <div class="form-group" style="margin-top:5px">
                            <label for="street">Street:</label>
                            <InputText id="street" class="form-control" @bind-Value="Contact.Street" />
                        </div>
                        <div class="form-group" style="margin-top:5px">
                            <label for="city">City:</label>
                            <InputText id="city" class="form-control" @bind-Value="Contact.City" />
                        </div>
                        <div class="form-group" style="margin-top:5px">
                            <label for="postalCode">Postal Code:</label>
                            <InputText id="postalCode" class="form-control" @bind-Value="Contact.PostalCode" />
                        </div>
                        <br />
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <button type="submit" class="btn btn-primary" style="margin-top:20px">Save</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public Contact Contact { get; set; }

    [Parameter]
    public EventCallback<Contact> OnSaveContact { get; set; }

    private void SaveContact()
    {
        OnSaveContact.InvokeAsync(Contact);
    }

    private void CloseModal()
    {
        // Reset contact data and close modal
        Contact = null;
    }
}
